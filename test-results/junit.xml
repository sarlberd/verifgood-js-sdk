<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="546" failures="0" errors="0" time="1.947">
  <testsuite name="Lieux API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.615" tests="26">
    <testcase classname="Lieux API Service Constructor should initialize endpoints correctly" name="Lieux API Service Constructor should initialize endpoints correctly" time="0.007">
    </testcase>
    <testcase classname="Lieux API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Lieux API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getInitiales should return initiales from lieu path" name="Lieux API Service getInitiales should return initiales from lieu path" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getInitiales should handle different levels" name="Lieux API Service getInitiales should handle different levels" time="0">
    </testcase>
    <testcase classname="Lieux API Service getInitiales should handle empty or missing path" name="Lieux API Service getInitiales should handle empty or missing path" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getOrganisations should call GET with Organisation filter" name="Lieux API Service getOrganisations should call GET with Organisation filter" time="0.003">
    </testcase>
    <testcase classname="Lieux API Service getSites should call GET with Site filter" name="Lieux API Service getSites should call GET with Site filter" time="0.002">
    </testcase>
    <testcase classname="Lieux API Service getLieux should call GET with metadatas and options" name="Lieux API Service getLieux should call GET with metadatas and options" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getLieu should call GET with lieu ID" name="Lieux API Service getLieu should call GET with lieu ID" time="0">
    </testcase>
    <testcase classname="Lieux API Service create (overridden) should call POST with datas wrapper" name="Lieux API Service create (overridden) should call POST with datas wrapper" time="0">
    </testcase>
    <testcase classname="Lieux API Service create (overridden) should handle dernierNumeroPiece option" name="Lieux API Service create (overridden) should handle dernierNumeroPiece option" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service importPieces should call POST with CSV data" name="Lieux API Service importPieces should call POST with CSV data" time="0">
    </testcase>
    <testcase classname="Lieux API Service createPiecesGeneriques should call POST with site ID and pieces data" name="Lieux API Service createPiecesGeneriques should call POST with site ID and pieces data" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service createPiecesGeneriquesFamilleSite should call POST with famille and pieces data" name="Lieux API Service createPiecesGeneriquesFamilleSite should call POST with famille and pieces data" time="0">
    </testcase>
    <testcase classname="Lieux API Service createPieceGenerique should call POST with site ID" name="Lieux API Service createPieceGenerique should call POST with site ID" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service updateLieu should call PUT with lieu ID and data" name="Lieux API Service updateLieu should call PUT with lieu ID and data" time="0">
    </testcase>
    <testcase classname="Lieux API Service updateLieux should call PUT with multiple lieux data" name="Lieux API Service updateLieux should call PUT with multiple lieux data" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service deleteLieu should call DELETE with lieu ID" name="Lieux API Service deleteLieu should call DELETE with lieu ID" time="0">
    </testcase>
    <testcase classname="Lieux API Service deleteLieu should throw error when lieu ID is missing" name="Lieux API Service deleteLieu should throw error when lieu ID is missing" time="0.019">
    </testcase>
    <testcase classname="Lieux API Service getExcelFile should prepare export query for xlsx" name="Lieux API Service getExcelFile should prepare export query for xlsx" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getExcelFile should prepare export query for csv" name="Lieux API Service getExcelFile should prepare export query for csv" time="0">
    </testcase>
    <testcase classname="Lieux API Service saveRestrictionSiteForUser should call POST with collection data" name="Lieux API Service saveRestrictionSiteForUser should call POST with collection data" time="0.001">
    </testcase>
    <testcase classname="Lieux API Service getFamilleBackgroundColor should return array of famille colors" name="Lieux API Service getFamilleBackgroundColor should return array of famille colors" time="0">
    </testcase>
    <testcase classname="Lieux API Service getFamilleBackgroundColor should handle empty array" name="Lieux API Service getFamilleBackgroundColor should handle empty array" time="0">
    </testcase>
    <testcase classname="Lieux API Service getFamilles should extract unique familles from sites and return colors" name="Lieux API Service getFamilles should extract unique familles from sites and return colors" time="0">
    </testcase>
    <testcase classname="Lieux API Service getFamilles should handle empty sites array" name="Lieux API Service getFamilles should handle empty sites array" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Roles Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.616" tests="11">
    <testcase classname="Roles Service Constructor should initialize endpoints correctly" name="Roles Service Constructor should initialize endpoints correctly" time="0.01">
    </testcase>
    <testcase classname="Roles Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Roles Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should return true when user has permission (global app context)" name="Roles Service Role Permission Methods can should return true when user has permission (global app context)" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should return false when user does not have permission (global app context)" name="Roles Service Role Permission Methods can should return false when user does not have permission (global app context)" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should return true when user has permission (sessionStorage fallback)" name="Roles Service Role Permission Methods can should return true when user has permission (sessionStorage fallback)" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should return false and show alert when user does not have permission (sessionStorage)" name="Roles Service Role Permission Methods can should return false and show alert when user does not have permission (sessionStorage)" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should return true when no user in sessionStorage" name="Roles Service Role Permission Methods can should return true when no user in sessionStorage" time="0">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should handle invalid JSON in sessionStorage" name="Roles Service Role Permission Methods can should handle invalid JSON in sessionStorage" time="0.002">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods can should handle non-existent rules" name="Roles Service Role Permission Methods can should handle non-existent rules" time="0.001">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods getRoleRules should return empty object (placeholder implementation)" name="Roles Service Role Permission Methods getRoleRules should return empty object (placeholder implementation)" time="0">
    </testcase>
    <testcase classname="Roles Service Role Permission Methods getRoleFromStorage should return null (placeholder implementation)" name="Roles Service Role Permission Methods getRoleFromStorage should return null (placeholder implementation)" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SortieEquipement API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.074" tests="10">
    <testcase classname="SortieEquipement API Service Constructor should initialize endpoints correctly" name="SortieEquipement API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="SortieEquipement API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="SortieEquipement API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should get equipment output types with metadatas" name="SortieEquipement API Service getTypes method should get equipment output types with metadatas" time="0.001">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should restore original endpoint after getTypes call" name="SortieEquipement API Service getTypes method should restore original endpoint after getTypes call" time="0">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should handle response with different data structure" name="SortieEquipement API Service getTypes method should handle response with different data structure" time="0.001">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should handle errors gracefully" name="SortieEquipement API Service getTypes method should handle errors gracefully" time="0.006">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should handle response with metadatas instead of meta" name="SortieEquipement API Service getTypes method should handle response with metadatas instead of meta" time="0">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should work with empty metadatas" name="SortieEquipement API Service getTypes method should work with empty metadatas" time="0.001">
    </testcase>
    <testcase classname="SortieEquipement API Service getTypes method should call types endpoint correctly" name="SortieEquipement API Service getTypes method should call types endpoint correctly" time="0">
    </testcase>
    <testcase classname="SortieEquipement API Service App context integration should handle missing app context gracefully" name="SortieEquipement API Service App context integration should handle missing app context gracefully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Consommable API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.096" tests="32">
    <testcase classname="Consommable API Service CRUD Operations getAll should get all consommables" name="Consommable API Service CRUD Operations getAll should get all consommables" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service CRUD Operations getById should get a consommable by id" name="Consommable API Service CRUD Operations getById should get a consommable by id" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service CRUD Operations create should create a new consommable" name="Consommable API Service CRUD Operations create should create a new consommable" time="0">
    </testcase>
    <testcase classname="Consommable API Service CRUD Operations update should update a consommable" name="Consommable API Service CRUD Operations update should update a consommable" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service CRUD Operations delete should delete a consommable" name="Consommable API Service CRUD Operations delete should delete a consommable" time="0">
    </testcase>
    <testcase classname="Consommable API Service Enhanced Methods getConsommables should get consommables with storage options" name="Consommable API Service Enhanced Methods getConsommables should get consommables with storage options" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Enhanced Methods getConsommablesEtiquettes should get consommables etiquettes" name="Consommable API Service Enhanced Methods getConsommablesEtiquettes should get consommables etiquettes" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Enhanced Methods getConsommablesEnStock should get consommables en stock" name="Consommable API Service Enhanced Methods getConsommablesEnStock should get consommables en stock" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Enhanced Methods getEquipements should get equipements for a consommable" name="Consommable API Service Enhanced Methods getEquipements should get equipements for a consommable" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Equipment and Association Methods getConsommablesForEquipement should get consommables for an equipement" name="Consommable API Service Equipment and Association Methods getConsommablesForEquipement should get consommables for an equipement" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Equipment and Association Methods getEquipementConsommables should get equipement consommables" name="Consommable API Service Equipment and Association Methods getEquipementConsommables should get equipement consommables" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Equipment and Association Methods createConsommablesEquipements should create consommables equipements association" name="Consommable API Service Equipment and Association Methods createConsommablesEquipements should create consommables equipements association" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Stock Management Methods updateStock should update stock for a consommable" name="Consommable API Service Stock Management Methods updateStock should update stock for a consommable" time="0">
    </testcase>
    <testcase classname="Consommable API Service Stock Management Methods updateConsommables should update multiple consommables" name="Consommable API Service Stock Management Methods updateConsommables should update multiple consommables" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Stock Management Methods deleteMultiple should delete multiple consommables" name="Consommable API Service Stock Management Methods deleteMultiple should delete multiple consommables" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Stock Management Methods removeConsommable should remove/delete a consommable" name="Consommable API Service Stock Management Methods removeConsommable should remove/delete a consommable" time="0">
    </testcase>
    <testcase classname="Consommable API Service Consumption and Movement Methods getConsommations should get consommations" name="Consommable API Service Consumption and Movement Methods getConsommations should get consommations" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Consumption and Movement Methods createConsommableMouvement should create a consommable mouvement" name="Consommable API Service Consumption and Movement Methods createConsommableMouvement should create a consommable mouvement" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Consumption and Movement Methods deleteConsommableMouvement should delete a consommable mouvement" name="Consommable API Service Consumption and Movement Methods deleteConsommableMouvement should delete a consommable mouvement" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Consumption and Movement Methods createConsommations should create consommations" name="Consommable API Service Consumption and Movement Methods createConsommations should create consommations" time="0">
    </testcase>
    <testcase classname="Consommable API Service Consumption and Movement Methods createConsommations should create consommations with maintenance ID" name="Consommable API Service Consumption and Movement Methods createConsommations should create consommations with maintenance ID" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods getFile should export consommables file and return a Blob" name="Consommable API Service Export and Reporting Methods getFile should export consommables file and return a Blob" time="0.002">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods getFile should export CSV file with BOM and return a Blob" name="Consommable API Service Export and Reporting Methods getFile should export CSV file with BOM and return a Blob" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods getRepartitionQuantites should get repartition quantites" name="Consommable API Service Export and Reporting Methods getRepartitionQuantites should get repartition quantites" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods getConsommableMouvementsDemandeurs should get consommable mouvements demandeurs" name="Consommable API Service Export and Reporting Methods getConsommableMouvementsDemandeurs should get consommable mouvements demandeurs" time="0">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods exportConsommables should export consommables to file and return a Blob" name="Consommable API Service Export and Reporting Methods exportConsommables should export consommables to file and return a Blob" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Export and Reporting Methods exportConsommables should export CSV consommables with BOM and return a Blob" name="Consommable API Service Export and Reporting Methods exportConsommables should export CSV consommables with BOM and return a Blob" time="0.003">
    </testcase>
    <testcase classname="Consommable API Service Supplier and Integration Methods createConsommableFournisseurs should create consommable fournisseurs association" name="Consommable API Service Supplier and Integration Methods createConsommableFournisseurs should create consommable fournisseurs association" time="0">
    </testcase>
    <testcase classname="Consommable API Service Supplier and Integration Methods removeConsommableFournisseurs should remove consommable fournisseurs association" name="Consommable API Service Supplier and Integration Methods removeConsommableFournisseurs should remove consommable fournisseurs association" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Supplier and Integration Methods importModelConsommablesExcel should import consommables from Excel model" name="Consommable API Service Supplier and Integration Methods importModelConsommablesExcel should import consommables from Excel model" time="0">
    </testcase>
    <testcase classname="Consommable API Service Supplier and Integration Methods getExcelFileModeleIntegration should get Excel file model for integration and return a Blob" name="Consommable API Service Supplier and Integration Methods getExcelFileModeleIntegration should get Excel file model for integration and return a Blob" time="0.001">
    </testcase>
    <testcase classname="Consommable API Service Additional Methods createOperationsConsommations should create operations consommations for maintenance" name="Consommable API Service Additional Methods createOperationsConsommations should create operations consommations for maintenance" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Metadatas Class" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.093" tests="26">
    <testcase classname="Metadatas Class Constructor should initialize with default values when no arguments are provided" name="Metadatas Class Constructor should initialize with default values when no arguments are provided" time="0.002">
    </testcase>
    <testcase classname="Metadatas Class Constructor should initialize with a name when provided" name="Metadatas Class Constructor should initialize with a name when provided" time="0">
    </testcase>
    <testcase classname="Metadatas Class Filters should add a filter using setFilter" name="Metadatas Class Filters should add a filter using setFilter" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class Filters should check if a filter exists using filterExist" name="Metadatas Class Filters should check if a filter exists using filterExist" time="0">
    </testcase>
    <testcase classname="Metadatas Class Filters should delete a filter using deleteFilter" name="Metadatas Class Filters should delete a filter using deleteFilter" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class Filters should clear all filters using clearAllFilters" name="Metadatas Class Filters should clear all filters using clearAllFilters" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFilter should overwrite an existing filter with the same name" name="Metadatas Class setFilter should overwrite an existing filter with the same name" time="0">
    </testcase>
    <testcase classname="Metadatas Class getFilterValue and getFilterAction should return the correct value and action for a filter" name="Metadatas Class getFilterValue and getFilterAction should return the correct value and action for a filter" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class getFilterValue and getFilterAction should throw an error if the filter does not exist" name="Metadatas Class getFilterValue and getFilterAction should throw an error if the filter does not exist" time="0.016">
    </testcase>
    <testcase classname="Metadatas Class Directives should set a limit directive using setLimit" name="Metadatas Class Directives should set a limit directive using setLimit" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class Directives should check if a limit directive is set using isLimitSet" name="Metadatas Class Directives should check if a limit directive is set using isLimitSet" time="0">
    </testcase>
    <testcase classname="Metadatas Class setDirectives should overwrite existing directives with the same name" name="Metadatas Class setDirectives should overwrite existing directives with the same name" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class setDirectives should handle an empty array of directives" name="Metadatas Class setDirectives should handle an empty array of directives" time="0">
    </testcase>
    <testcase classname="Metadatas Class Counters should get a counter value using getCounter" name="Metadatas Class Counters should get a counter value using getCounter" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class Counters should set counters using setCounters" name="Metadatas Class Counters should set counters using setCounters" time="0">
    </testcase>
    <testcase classname="Metadatas Class Name should set and get the name using setName and getName" name="Metadatas Class Name should set and get the name using setName and getName" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class Name should check if the metadata is storable using isStorable" name="Metadatas Class Name should check if the metadata is storable using isStorable" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFiltersFromArray should clear all filters when an empty array is provided" name="Metadatas Class setFiltersFromArray should clear all filters when an empty array is provided" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFiltersFromArray should set filters correctly from an array" name="Metadatas Class setFiltersFromArray should set filters correctly from an array" time="0">
    </testcase>
    <testcase classname="Metadatas Class get should remove filters with empty values and return the formatted object" name="Metadatas Class get should remove filters with empty values and return the formatted object" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class hasStoredFilterEqualsTo should return true if the stored filters match the given filters" name="Metadatas Class hasStoredFilterEqualsTo should return true if the stored filters match the given filters" time="0">
    </testcase>
    <testcase classname="Metadatas Class hasStoredFilterEqualsTo should return false if the stored filters do not match the given filters" name="Metadatas Class hasStoredFilterEqualsTo should return false if the stored filters do not match the given filters" time="0.001">
    </testcase>
    <testcase classname="Metadatas Class hasStoredFilterEqualsTo should handle cases where filters are deeply nested or have different orders" name="Metadatas Class hasStoredFilterEqualsTo should handle cases where filters are deeply nested or have different orders" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFilters should format filters with &quot;between&quot; actions correctly" name="Metadatas Class setFilters should format filters with &quot;between&quot; actions correctly" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFilters should merge filters correctly" name="Metadatas Class setFilters should merge filters correctly" time="0">
    </testcase>
    <testcase classname="Metadatas Class setFilters should handle empty filters gracefully" name="Metadatas Class setFilters should handle empty filters gracefully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PlanMaintenance API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.808" tests="9">
    <testcase classname="PlanMaintenance API Service Constructor should initialize endpoints correctly" name="PlanMaintenance API Service Constructor should initialize endpoints correctly" time="0.024">
    </testcase>
    <testcase classname="PlanMaintenance API Service Constructor should inherit from ApiRequest with correct auth" name="PlanMaintenance API Service Constructor should inherit from ApiRequest with correct auth" time="0.002">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should get preventive maintenance plan data" name="PlanMaintenance API Service getPrevventiveMaintenance should get preventive maintenance plan data" time="0.006">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should handle empty response data" name="PlanMaintenance API Service getPrevventiveMaintenance should handle empty response data" time="0.001">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should reject on API error" name="PlanMaintenance API Service getPrevventiveMaintenance should reject on API error" time="0.012">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should handle different date formats" name="PlanMaintenance API Service getPrevventiveMaintenance should handle different date formats" time="0.002">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should handle complex metadata objects" name="PlanMaintenance API Service getPrevventiveMaintenance should handle complex metadata objects" time="0.001">
    </testcase>
    <testcase classname="PlanMaintenance API Service getPrevventiveMaintenance should handle multiple sites restriction" name="PlanMaintenance API Service getPrevventiveMaintenance should handle multiple sites restriction" time="0.002">
    </testcase>
    <testcase classname="PlanMaintenance API Service VGSDK integration should be accessible through VGSDK" name="PlanMaintenance API Service VGSDK integration should be accessible through VGSDK" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PersonalParameters API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.84" tests="31">
    <testcase classname="PersonalParameters API Service Constructor should initialize endpoints correctly" name="PersonalParameters API Service Constructor should initialize endpoints correctly" time="0.024">
    </testcase>
    <testcase classname="PersonalParameters API Service Constructor should inherit from ApiRequest with correct auth" name="PersonalParameters API Service Constructor should inherit from ApiRequest with correct auth" time="0.002">
    </testcase>
    <testcase classname="PersonalParameters API Service localStorageWorksHere should return true when Storage is available" name="PersonalParameters API Service localStorageWorksHere should return true when Storage is available" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getAllDisplayable should return parsed displayable parameters" name="PersonalParameters API Service getAllDisplayable should return parsed displayable parameters" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getAllDisplayable should return null when no data exists" name="PersonalParameters API Service getAllDisplayable should return null when no data exists" time="0.003">
    </testcase>
    <testcase classname="PersonalParameters API Service getAllDisplayable should handle JSON parse errors gracefully" name="PersonalParameters API Service getAllDisplayable should handle JSON parse errors gracefully" time="0.018">
    </testcase>
    <testcase classname="PersonalParameters API Service getLandingPage should return landing page from localStorage" name="PersonalParameters API Service getLandingPage should return landing page from localStorage" time="0.002">
    </testcase>
    <testcase classname="PersonalParameters API Service getLandingPage should return null when no landing page is set" name="PersonalParameters API Service getLandingPage should return null when no landing page is set" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getDefaultLandingPage should return intervention page for ROLE_BASIC" name="PersonalParameters API Service getDefaultLandingPage should return intervention page for ROLE_BASIC" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getDefaultLandingPage should return maintenances page for other roles" name="PersonalParameters API Service getDefaultLandingPage should return maintenances page for other roles" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getDefaultLandingPage should return maintenances page when no role provided" name="PersonalParameters API Service getDefaultLandingPage should return maintenances page when no role provided" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getDefaultLandingPage should return maintenances page for null role" name="PersonalParameters API Service getDefaultLandingPage should return maintenances page for null role" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service setLandingPage should set landing page in localStorage" name="PersonalParameters API Service setLandingPage should set landing page in localStorage" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should return true for displayable element" name="PersonalParameters API Service isDisplayable should return true for displayable element" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should return true for non-boolean displayable element (default behavior)" name="PersonalParameters API Service isDisplayable should return true for non-boolean displayable element (default behavior)" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should return false for explicitly false element" name="PersonalParameters API Service isDisplayable should return false for explicitly false element" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should return true for unknown element (default)" name="PersonalParameters API Service isDisplayable should return true for unknown element (default)" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should handle parse errors gracefully" name="PersonalParameters API Service isDisplayable should handle parse errors gracefully" time="0.002">
    </testcase>
    <testcase classname="PersonalParameters API Service isDisplayable should handle empty localStorage gracefully" name="PersonalParameters API Service isDisplayable should handle empty localStorage gracefully" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service addDisplayable should add displayable element to localStorage" name="PersonalParameters API Service addDisplayable should add displayable element to localStorage" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service addDisplayable should add non-displayable element to localStorage" name="PersonalParameters API Service addDisplayable should add non-displayable element to localStorage" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service setUseIntegratedScannerInKeyboard should set scanner preference to true" name="PersonalParameters API Service setUseIntegratedScannerInKeyboard should set scanner preference to true" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service setUseIntegratedScannerInKeyboard should set scanner preference to false" name="PersonalParameters API Service setUseIntegratedScannerInKeyboard should set scanner preference to false" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return true when scanner is enabled" name="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return true when scanner is enabled" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return false when scanner is disabled" name="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return false when scanner is disabled" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return false when no preference is set" name="PersonalParameters API Service getUseIntegratedScannerInKeyboard should return false when no preference is set" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service getUseIntegratedScannerInKeyboard should handle parse errors gracefully" name="PersonalParameters API Service getUseIntegratedScannerInKeyboard should handle parse errors gracefully" time="0.003">
    </testcase>
    <testcase classname="PersonalParameters API Service initializeDefaults should set default landing page when not present" name="PersonalParameters API Service initializeDefaults should set default landing page when not present" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service initializeDefaults should not override existing landing page" name="PersonalParameters API Service initializeDefaults should not override existing landing page" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service computedGetAllDisplayable should return same result as getAllDisplayable" name="PersonalParameters API Service computedGetAllDisplayable should return same result as getAllDisplayable" time="0.001">
    </testcase>
    <testcase classname="PersonalParameters API Service VGSDK integration should be accessible through VGSDK" name="PersonalParameters API Service VGSDK integration should be accessible through VGSDK" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="VGSDK Class" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.814" tests="13">
    <testcase classname="VGSDK Class Constructor should initialize config and auth properties correctly" name="VGSDK Class Constructor should initialize config and auth properties correctly" time="0.02">
    </testcase>
    <testcase classname="VGSDK Class Constructor should initialize services as an empty object" name="VGSDK Class Constructor should initialize services as an empty object" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a SharedLinks instance from sharedLinks getter" name="VGSDK Class Service Getters should return a SharedLinks instance from sharedLinks getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Lieux instance from lieux getter" name="VGSDK Class Service Getters should return a Lieux instance from lieux getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return an Equipements instance from equipements getter" name="VGSDK Class Service Getters should return an Equipements instance from equipements getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Categories instance from categories getter" name="VGSDK Class Service Getters should return a Categories instance from categories getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Taches instance from taches getter" name="VGSDK Class Service Getters should return a Taches instance from taches getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Checkpoints instance from checkpoints getter" name="VGSDK Class Service Getters should return a Checkpoints instance from checkpoints getter" time="0.002">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return an Invitations instance from invitations getter" name="VGSDK Class Service Getters should return an Invitations instance from invitations getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Verifications instance from verifications getter" name="VGSDK Class Service Getters should return a Verifications instance from verifications getter" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Service Getters should return a Messaging instance from messaging getter" name="VGSDK Class Service Getters should return a Messaging instance from messaging getter" time="0">
    </testcase>
    <testcase classname="VGSDK Class Edge Cases should return the same service instance when a getter is called multiple times" name="VGSDK Class Edge Cases should return the same service instance when a getter is called multiple times" time="0.001">
    </testcase>
    <testcase classname="VGSDK Class Edge Cases should handle missing or incomplete configOptions gracefully" name="VGSDK Class Edge Cases should handle missing or incomplete configOptions gracefully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="SearchDatas API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.096" tests="15">
    <testcase classname="SearchDatas API Service Constructor should initialize endpoints correctly" name="SearchDatas API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="SearchDatas API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service search method should perform global search with default parameters" name="SearchDatas API Service search method should perform global search with default parameters" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service search method should perform global search with custom entities" name="SearchDatas API Service search method should perform global search with custom entities" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service search method should perform global search with custom userId and sites" name="SearchDatas API Service search method should perform global search with custom userId and sites" time="0">
    </testcase>
    <testcase classname="SearchDatas API Service search method should store search results in global app context" name="SearchDatas API Service search method should store search results in global app context" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service search method should handle errors gracefully" name="SearchDatas API Service search method should handle errors gracefully" time="0.021">
    </testcase>
    <testcase classname="SearchDatas API Service search method should return empty array when response has no data" name="SearchDatas API Service search method should return empty array when response has no data" time="0">
    </testcase>
    <testcase classname="SearchDatas API Service searchEquipements method should search equipements with metadatas" name="SearchDatas API Service searchEquipements method should search equipements with metadatas" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service searchEquipements method should search equipements with custom userId and sites" name="SearchDatas API Service searchEquipements method should search equipements with custom userId and sites" time="0">
    </testcase>
    <testcase classname="SearchDatas API Service searchEquipements method should restore original endpoint after equipements search" name="SearchDatas API Service searchEquipements method should restore original endpoint after equipements search" time="0">
    </testcase>
    <testcase classname="SearchDatas API Service searchEquipements method should handle equipements search errors gracefully" name="SearchDatas API Service searchEquipements method should handle equipements search errors gracefully" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service searchEquipements method should store equipements search results in global app context" name="SearchDatas API Service searchEquipements method should store equipements search results in global app context" time="0.001">
    </testcase>
    <testcase classname="SearchDatas API Service App context integration should handle missing app context gracefully" name="SearchDatas API Service App context integration should handle missing app context gracefully" time="0">
    </testcase>
    <testcase classname="SearchDatas API Service App context integration should handle missing store in app context gracefully" name="SearchDatas API Service App context integration should handle missing store in app context gracefully" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PlanInteractif API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:25" time="0.853" tests="19">
    <testcase classname="PlanInteractif API Service Constructor should initialize endpoints correctly" name="PlanInteractif API Service Constructor should initialize endpoints correctly" time="0.024">
    </testcase>
    <testcase classname="PlanInteractif API Service Constructor should inherit from ApiRequest with correct auth" name="PlanInteractif API Service Constructor should inherit from ApiRequest with correct auth" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service convertDataToFeature should convert data to GeoJSON feature" name="PlanInteractif API Service convertDataToFeature should convert data to GeoJSON feature" time="0.002">
    </testcase>
    <testcase classname="PlanInteractif API Service convertDataToFeature should handle missing coordinates" name="PlanInteractif API Service convertDataToFeature should handle missing coordinates" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service updateFeaturePosition should update feature position with new coordinates" name="PlanInteractif API Service updateFeaturePosition should update feature position with new coordinates" time="0.002">
    </testcase>
    <testcase classname="PlanInteractif API Service getPiecesACreer should extract pieces to create from GeoJSON draft" name="PlanInteractif API Service getPiecesACreer should extract pieces to create from GeoJSON draft" time="0.002">
    </testcase>
    <testcase classname="PlanInteractif API Service getPiecesACreer should return empty array when no pieces to create" name="PlanInteractif API Service getPiecesACreer should return empty array when no pieces to create" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service reaffectePiecesAuxMarkers should reassign pieces to markers based on libel_lieu and codeUn" name="PlanInteractif API Service reaffectePiecesAuxMarkers should reassign pieces to markers based on libel_lieu and codeUn" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service getElementsPositionneesEtNonPositionnees should separate positioned and non-positioned elements" name="PlanInteractif API Service getElementsPositionneesEtNonPositionnees should separate positioned and non-positioned elements" time="0.003">
    </testcase>
    <testcase classname="PlanInteractif API Service newGeoJsonFeature should create new GeoJSON feature from data and coordinates" name="PlanInteractif API Service newGeoJsonFeature should create new GeoJSON feature from data and coordinates" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service geoJsonDeepCopy should create deep copy of GeoJSON" name="PlanInteractif API Service geoJsonDeepCopy should create deep copy of GeoJSON" time="0.002">
    </testcase>
    <testcase classname="PlanInteractif API Service geoJsonDeepCopy should handle empty GeoJSON" name="PlanInteractif API Service geoJsonDeepCopy should handle empty GeoJSON" time="0">
    </testcase>
    <testcase classname="PlanInteractif API Service exportPiecesACreerExcel should export pieces to create as Excel" name="PlanInteractif API Service exportPiecesACreerExcel should export pieces to create as Excel" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service importCsv should import and parse CSV file correctly" name="PlanInteractif API Service importCsv should import and parse CSV file correctly" time="0.002">
    </testcase>
    <testcase classname="PlanInteractif API Service importCsv should handle CSV with special characters and sanitize data" name="PlanInteractif API Service importCsv should handle CSV with special characters and sanitize data" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service importCsv should reject on FileReader error" name="PlanInteractif API Service importCsv should reject on FileReader error" time="0.017">
    </testcase>
    <testcase classname="PlanInteractif API Service geoJsonVide computed property should return empty GeoJSON structure" name="PlanInteractif API Service geoJsonVide computed property should return empty GeoJSON structure" time="0">
    </testcase>
    <testcase classname="PlanInteractif API Service geoJsonVide computed property should return new instance each time" name="PlanInteractif API Service geoJsonVide computed property should return new instance each time" time="0.001">
    </testcase>
    <testcase classname="PlanInteractif API Service VGSDK integration should be accessible through VGSDK" name="PlanInteractif API Service VGSDK integration should be accessible through VGSDK" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MouvementsEquipements API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.069" tests="17">
    <testcase classname="MouvementsEquipements API Service Constructor should initialize endpoints correctly" name="MouvementsEquipements API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="MouvementsEquipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call getMovements with correct parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call getMovements with correct parameters" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call getMovementById with correct parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call getMovementById with correct parameters" time="0">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call updateMovement with correct parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call updateMovement with correct parameters" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should throw error when updating movement without ID" name="MouvementsEquipements API Service Non-CRUD Methods should throw error when updating movement without ID" time="0.008">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call createMovement with correct parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call createMovement with correct parameters" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should throw error when creating movement without type" name="MouvementsEquipements API Service Non-CRUD Methods should throw error when creating movement without type" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call deleteMovement with correct parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call deleteMovement with correct parameters" time="0">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should throw error when deleting movement without ID" name="MouvementsEquipements API Service Non-CRUD Methods should throw error when deleting movement without ID" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call getMouvementsSignataires with default type" name="MouvementsEquipements API Service Non-CRUD Methods should call getMouvementsSignataires with default type" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call getMouvementsSignataires with custom type" name="MouvementsEquipements API Service Non-CRUD Methods should call getMouvementsSignataires with custom type" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with default parameters" name="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with default parameters" time="0">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with CSV format" name="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with CSV format" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with Excel format" name="MouvementsEquipements API Service Non-CRUD Methods should call exportMovements with Excel format" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Error Handling should handle API errors gracefully" name="MouvementsEquipements API Service Error Handling should handle API errors gracefully" time="0.001">
    </testcase>
    <testcase classname="MouvementsEquipements API Service Error Handling should validate required parameters" name="MouvementsEquipements API Service Error Handling should validate required parameters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BonsDeCommande API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.081" tests="15">
    <testcase classname="BonsDeCommande API Service Constructor should initialize endpoints correctly" name="BonsDeCommande API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="BonsDeCommande API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods cancel should cancel a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods cancel should cancel a bon de commande" time="0.005">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods skipSending should skip sending a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods skipSending should skip sending a bon de commande" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods demandeValidation should request validation for a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods demandeValidation should request validation for a bon de commande" time="0.002">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods livraison should handle delivery for a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods livraison should handle delivery for a bon de commande" time="0.002">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods livraisonTotale should handle complete delivery for a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods livraisonTotale should handle complete delivery for a bon de commande" time="0.002">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods nonLivre should mark bon de commande as not delivered" name="BonsDeCommande API Service Non-CRUD Methods nonLivre should mark bon de commande as not delivered" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods clone should clone a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods clone should clone a bon de commande" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods getHistorique should get historical data for a bon de commande" name="BonsDeCommande API Service Non-CRUD Methods getHistorique should get historical data for a bon de commande" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods getPDF should get PDF export of bon de commande" name="BonsDeCommande API Service Non-CRUD Methods getPDF should get PDF export of bon de commande" time="0.003">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods getRepartitionMontantHt should get amount distribution for dashboard" name="BonsDeCommande API Service Non-CRUD Methods getRepartitionMontantHt should get amount distribution for dashboard" time="0.002">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods export should export bons de commande" name="BonsDeCommande API Service Non-CRUD Methods export should export bons de commande" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods getCreateurs should get creators of bons de commande" name="BonsDeCommande API Service Non-CRUD Methods getCreateurs should get creators of bons de commande" time="0.002">
    </testcase>
    <testcase classname="BonsDeCommande API Service Non-CRUD Methods getValidateurs should get validators of bons de commande" name="BonsDeCommande API Service Non-CRUD Methods getValidateurs should get validators of bons de commande" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Composant API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.076" tests="18">
    <testcase classname="Composant API Service Constructor should initialize endpoints correctly" name="Composant API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Composant API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Composant API Service CRUD Operations getAll (ComposantMixins_get equivalent) should get all composants with metadatas" name="Composant API Service CRUD Operations getAll (ComposantMixins_get equivalent) should get all composants with metadatas" time="0.001">
    </testcase>
    <testcase classname="Composant API Service CRUD Operations create (ComposantMixins_create equivalent) should create composants" name="Composant API Service CRUD Operations create (ComposantMixins_create equivalent) should create composants" time="0.001">
    </testcase>
    <testcase classname="Composant API Service CRUD Operations update (ComposantMixins_update equivalent) should update a composant" name="Composant API Service CRUD Operations update (ComposantMixins_update equivalent) should update a composant" time="0">
    </testcase>
    <testcase classname="Composant API Service CRUD Operations remove (ComposantMixins_delete equivalent) should delete a composant" name="Composant API Service CRUD Operations remove (ComposantMixins_delete equivalent) should delete a composant" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods postComposants (duplicate of create) should post composants" name="Composant API Service Non-CRUD Methods postComposants (duplicate of create) should post composants" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods putComposant (enhanced update) should update a composant and clean unwanted properties" name="Composant API Service Non-CRUD Methods putComposant (enhanced update) should update a composant and clean unwanted properties" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods deleteComposant (legacy delete) should delete a composant using legacy endpoint" name="Composant API Service Non-CRUD Methods deleteComposant (legacy delete) should delete a composant using legacy endpoint" time="0">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods postLibelProblem should add a libel problem to a composant" name="Composant API Service Non-CRUD Methods postLibelProblem should add a libel problem to a composant" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods deleteLibelProblem should delete a libel problem" name="Composant API Service Non-CRUD Methods deleteLibelProblem should delete a libel problem" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods getIcons should get available icons for composants" name="Composant API Service Non-CRUD Methods getIcons should get available icons for composants" time="0">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods associateComposants (deprecated) should associate composants with equipment" name="Composant API Service Non-CRUD Methods associateComposants (deprecated) should associate composants with equipment" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods associateLibelleProblemes (deprecated) should associate libelle problemes with a composant" name="Composant API Service Non-CRUD Methods associateLibelleProblemes (deprecated) should associate libelle problemes with a composant" time="0">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods getLibelleProblemOf (utility) should filter libelle problems by composant name" name="Composant API Service Non-CRUD Methods getLibelleProblemOf (utility) should filter libelle problems by composant name" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods getLibelleProblemOf (utility) should return empty array when no matches found" name="Composant API Service Non-CRUD Methods getLibelleProblemOf (utility) should return empty array when no matches found" time="0">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods getComposants (alternative getAll) should get composants with provided metadatas" name="Composant API Service Non-CRUD Methods getComposants (alternative getAll) should get composants with provided metadatas" time="0.001">
    </testcase>
    <testcase classname="Composant API Service Non-CRUD Methods getComposants (alternative getAll) should get composants with default metadatas when none provided" name="Composant API Service Non-CRUD Methods getComposants (alternative getAll) should get composants with default metadatas when none provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Operation API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.074" tests="10">
    <testcase classname="Operation API Service Constructor should initialize endpoints correctly" name="Operation API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Operation API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Operation API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.002">
    </testcase>
    <testcase classname="Operation API Service Factory Functions createDefaultOperation should create operation with default values" name="Operation API Service Factory Functions createDefaultOperation should create operation with default values" time="0.001">
    </testcase>
    <testcase classname="Operation API Service Factory Functions createDefaultOperation should create operation with provided user values" name="Operation API Service Factory Functions createDefaultOperation should create operation with provided user values" time="0">
    </testcase>
    <testcase classname="Operation API Service Factory Functions createNew should create new operation using service method" name="Operation API Service Factory Functions createNew should create new operation using service method" time="0.001">
    </testcase>
    <testcase classname="Operation API Service Non-CRUD Methods createBIOperation should create BI operation with correct payload" name="Operation API Service Non-CRUD Methods createBIOperation should create BI operation with correct payload" time="0.004">
    </testcase>
    <testcase classname="Operation API Service Non-CRUD Methods createPhotoOperation should create photo operation with correct payload" name="Operation API Service Non-CRUD Methods createPhotoOperation should create photo operation with correct payload" time="0.001">
    </testcase>
    <testcase classname="Operation API Service Non-CRUD Methods updateOperation should update operation using V2.0 endpoint" name="Operation API Service Non-CRUD Methods updateOperation should update operation using V2.0 endpoint" time="0.001">
    </testcase>
    <testcase classname="Operation API Service Non-CRUD Methods getFile should export operations to CSV file" name="Operation API Service Non-CRUD Methods getFile should export operations to CSV file" time="0">
    </testcase>
    <testcase classname="Operation API Service Non-CRUD Methods getFile should export operations to Excel file" name="Operation API Service Non-CRUD Methods getFile should export operations to Excel file" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Parametres API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.074" tests="14">
    <testcase classname="Parametres API Service Constructor should initialize endpoints correctly" name="Parametres API Service Constructor should initialize endpoints correctly" time="0">
    </testcase>
    <testcase classname="Parametres API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Parametres API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should call getParameters with correct parameters" name="Parametres API Service Non-CRUD Methods should call getParameters with correct parameters" time="0">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should call updateParameter with correct parameters" name="Parametres API Service Non-CRUD Methods should call updateParameter with correct parameters" time="0.001">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should call deleteDemoAccount with default entities" name="Parametres API Service Non-CRUD Methods should call deleteDemoAccount with default entities" time="0">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should call deleteDemoAccount with custom entities" name="Parametres API Service Non-CRUD Methods should call deleteDemoAccount with custom entities" time="0.001">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should handle updateParameter with additional properties" name="Parametres API Service Non-CRUD Methods should handle updateParameter with additional properties" time="0.001">
    </testcase>
    <testcase classname="Parametres API Service Non-CRUD Methods should preserve original parameter structure in updateParameter" name="Parametres API Service Non-CRUD Methods should preserve original parameter structure in updateParameter" time="0">
    </testcase>
    <testcase classname="Parametres API Service Error Handling should handle API errors gracefully in getParameters" name="Parametres API Service Error Handling should handle API errors gracefully in getParameters" time="0.007">
    </testcase>
    <testcase classname="Parametres API Service Error Handling should handle API errors gracefully in updateParameter" name="Parametres API Service Error Handling should handle API errors gracefully in updateParameter" time="0">
    </testcase>
    <testcase classname="Parametres API Service Error Handling should handle API errors gracefully in deleteDemoAccount" name="Parametres API Service Error Handling should handle API errors gracefully in deleteDemoAccount" time="0">
    </testcase>
    <testcase classname="Parametres API Service Method Signatures should accept no parameters for getParameters" name="Parametres API Service Method Signatures should accept no parameters for getParameters" time="0.001">
    </testcase>
    <testcase classname="Parametres API Service Method Signatures should require datas parameter for updateParameter" name="Parametres API Service Method Signatures should require datas parameter for updateParameter" time="0">
    </testcase>
    <testcase classname="Parametres API Service Method Signatures should accept optional entitiesToRemove for deleteDemoAccount" name="Parametres API Service Method Signatures should accept optional entitiesToRemove for deleteDemoAccount" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Contrat API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.068" tests="11">
    <testcase classname="Contrat API Service Constructor should initialize endpoints correctly" name="Contrat API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Contrat API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods getContrats should get contracts with site restrictions" name="Contrat API Service Non-CRUD Methods getContrats should get contracts with site restrictions" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods fetchContrats (deprecated) should fetch contracts with metadatas" name="Contrat API Service Non-CRUD Methods fetchContrats (deprecated) should fetch contracts with metadatas" time="0">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods fetchContrat (deprecated) should fetch single contract by ID" name="Contrat API Service Non-CRUD Methods fetchContrat (deprecated) should fetch single contract by ID" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods create should create contract with datas array wrapper" name="Contrat API Service Non-CRUD Methods create should create contract with datas array wrapper" time="0">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods updateContrat should update contract removing tiers fields" name="Contrat API Service Non-CRUD Methods updateContrat should update contract removing tiers fields" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods archive should archive contract" name="Contrat API Service Non-CRUD Methods archive should archive contract" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods deleteContrat (deprecated) should delete contract" name="Contrat API Service Non-CRUD Methods deleteContrat (deprecated) should delete contract" time="0">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods attachCategoriesToContrat (deprecated) should attach categories to contract" name="Contrat API Service Non-CRUD Methods attachCategoriesToContrat (deprecated) should attach categories to contract" time="0.001">
    </testcase>
    <testcase classname="Contrat API Service Non-CRUD Methods formatStatus (deprecated) should return placeholder message for status formatting" name="Contrat API Service Non-CRUD Methods formatStatus (deprecated) should return placeholder message for status formatting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Maintenance API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.077" tests="31">
    <testcase classname="Maintenance API Service Constructor should initialize endpoints correctly" name="Maintenance API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Maintenance API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getMaintenances with correct parameters" name="Maintenance API Service Non-CRUD Methods should call getMaintenances with correct parameters" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getMesMaintenancesPlanifiees" name="Maintenance API Service Non-CRUD Methods should call getMesMaintenancesPlanifiees" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getDemandeurs" name="Maintenance API Service Non-CRUD Methods should call getDemandeurs" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call createMaintenances" name="Maintenance API Service Non-CRUD Methods should call createMaintenances" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call demandeDevis" name="Maintenance API Service Non-CRUD Methods should call demandeDevis" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call deleteMultiple" name="Maintenance API Service Non-CRUD Methods should call deleteMultiple" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call relancer" name="Maintenance API Service Non-CRUD Methods should call relancer" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call postMaintenanceOperations" name="Maintenance API Service Non-CRUD Methods should call postMaintenanceOperations" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call postOperations" name="Maintenance API Service Non-CRUD Methods should call postOperations" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call putOperation" name="Maintenance API Service Non-CRUD Methods should call putOperation" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call deleteOperation" name="Maintenance API Service Non-CRUD Methods should call deleteOperation" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call prendreEnCompteMaintenances" name="Maintenance API Service Non-CRUD Methods should call prendreEnCompteMaintenances" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call prendreEnCompteMaintenance" name="Maintenance API Service Non-CRUD Methods should call prendreEnCompteMaintenance" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call mettreEnAttenteMaintenances" name="Maintenance API Service Non-CRUD Methods should call mettreEnAttenteMaintenances" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call mettreEnAttenteMaintenance" name="Maintenance API Service Non-CRUD Methods should call mettreEnAttenteMaintenance" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call resolveMaintenances" name="Maintenance API Service Non-CRUD Methods should call resolveMaintenances" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call resolveMaintenance" name="Maintenance API Service Non-CRUD Methods should call resolveMaintenance" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call reopenMaintenances" name="Maintenance API Service Non-CRUD Methods should call reopenMaintenances" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call setStatusMaintenances" name="Maintenance API Service Non-CRUD Methods should call setStatusMaintenances" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getFile" name="Maintenance API Service Non-CRUD Methods should call getFile" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getFile with CSV extension" name="Maintenance API Service Non-CRUD Methods should call getFile with CSV extension" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Non-CRUD Methods should call getPdfFile" name="Maintenance API Service Non-CRUD Methods should call getPdfFile" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should calculate coutInterne correctly" name="Maintenance API Service Utility Methods should calculate coutInterne correctly" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should return 0 for dureeMiseEnAttente" name="Maintenance API Service Utility Methods should return 0 for dureeMiseEnAttente" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should return 0 for dureeFermetureTemporaireHorsWeekend" name="Maintenance API Service Utility Methods should return 0 for dureeFermetureTemporaireHorsWeekend" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should return 0 for dureeNetteTraitement" name="Maintenance API Service Utility Methods should return 0 for dureeNetteTraitement" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should resolve updateMultipleTypologies" name="Maintenance API Service Utility Methods should resolve updateMultipleTypologies" time="0">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should return empty array for deprecated getCalendarEvents" name="Maintenance API Service Utility Methods should return empty array for deprecated getCalendarEvents" time="0.001">
    </testcase>
    <testcase classname="Maintenance API Service Utility Methods should return empty array for deprecated formatToCalendarEvents" name="Maintenance API Service Utility Methods should return empty array for deprecated formatToCalendarEvents" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Dashboard API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.067" tests="22">
    <testcase classname="Dashboard API Service Constructor should initialize endpoints correctly" name="Dashboard API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Dashboard API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Curatif Dashboard Methods getCuratifTotaux should get curatif totaux dashboard data" name="Dashboard API Service Curatif Dashboard Methods getCuratifTotaux should get curatif totaux dashboard data" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Curatif Dashboard Methods getCuratifUrgentes should get curatif urgentes dashboard data" name="Dashboard API Service Curatif Dashboard Methods getCuratifUrgentes should get curatif urgentes dashboard data" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Curatif Dashboard Methods getCuratifRepartitionAge should get curatif repartition age dashboard data" name="Dashboard API Service Curatif Dashboard Methods getCuratifRepartitionAge should get curatif repartition age dashboard data" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Preventif Dashboard Methods getPreventifRepartitionNonConformites should get preventif non conformites dashboard data" name="Dashboard API Service Preventif Dashboard Methods getPreventifRepartitionNonConformites should get preventif non conformites dashboard data" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Preventif Dashboard Methods getPreventifReleverCompteur should get preventif relever compteur dashboard data" name="Dashboard API Service Preventif Dashboard Methods getPreventifReleverCompteur should get preventif relever compteur dashboard data" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Consommables Dashboard Methods getConsommablesRepartitionEnStock should get consommables en stock dashboard data" name="Dashboard API Service Consommables Dashboard Methods getConsommablesRepartitionEnStock should get consommables en stock dashboard data" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Consommables Dashboard Methods getConsommablesRepartitionConsommationsMaintenances should get consommables maintenances dashboard data" name="Dashboard API Service Consommables Dashboard Methods getConsommablesRepartitionConsommationsMaintenances should get consommables maintenances dashboard data" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionComposants" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionComposants" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionDemandeur" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionDemandeur" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionUserAffecte" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionUserAffecte" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionTiersAffecte" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionTiersAffecte" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionCategoriesEquipements" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionCategoriesEquipements" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionCorpsDetat" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionCorpsDetat" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionEquipements" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionEquipements" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionEquipementsCouts" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionEquipementsCouts" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionPieces" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionPieces" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionDureeTraitement" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getCuratifRepartitionDureeTraitement" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getPreventifProchainesInterventionsExternes" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getPreventifProchainesInterventionsExternes" time="0">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getPreventifProgressionInterne" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getPreventifProgressionInterne" time="0.001">
    </testcase>
    <testcase classname="Dashboard API Service Additional Methods Coverage should call correct endpoint for getConsommablesRepartitionConsommationsBonsDeSortie" name="Dashboard API Service Additional Methods Coverage should call correct endpoint for getConsommablesRepartitionConsommationsBonsDeSortie" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LibellesCategorie API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.057" tests="6">
    <testcase classname="LibellesCategorie API Service Constructor should initialize endpoints correctly" name="LibellesCategorie API Service Constructor should initialize endpoints correctly" time="0">
    </testcase>
    <testcase classname="LibellesCategorie API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="LibellesCategorie API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="LibellesCategorie API Service getAll (overridden) should call GET /api/libelles-categorie with userId and metadatas" name="LibellesCategorie API Service getAll (overridden) should call GET /api/libelles-categorie with userId and metadatas" time="0">
    </testcase>
    <testcase classname="LibellesCategorie API Service create (overridden) should call POST /api/libelles-categories with datas wrapper" name="LibellesCategorie API Service create (overridden) should call POST /api/libelles-categories with datas wrapper" time="0">
    </testcase>
    <testcase classname="LibellesCategorie API Service create (overridden) should handle custom options parameter" name="LibellesCategorie API Service create (overridden) should handle custom options parameter" time="0">
    </testcase>
    <testcase classname="LibellesCategorie API Service remove (overridden) should call DELETE /api/libelle-categorie/{id} and wrap response" name="LibellesCategorie API Service remove (overridden) should call DELETE /api/libelle-categorie/{id} and wrap response" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="IntegrationsDonnees API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.057" tests="3">
    <testcase classname="IntegrationsDonnees API Service Constructor should initialize endpoints correctly" name="IntegrationsDonnees API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="IntegrationsDonnees API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="IntegrationsDonnees API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="IntegrationsDonnees API Service categoriesLieux should call POST /api/integration/categories/lieux/json with csv payload" name="IntegrationsDonnees API Service categoriesLieux should call POST /api/integration/categories/lieux/json with csv payload" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Calendar API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.056" tests="5">
    <testcase classname="Calendar API Service Constructor should initialize endpoints correctly" name="Calendar API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Calendar API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Calendar API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Calendar API Service getEvents should get calendar events with filters" name="Calendar API Service getEvents should get calendar events with filters" time="0.001">
    </testcase>
    <testcase classname="Calendar API Service formatEvents should format events correctly" name="Calendar API Service formatEvents should format events correctly" time="0">
    </testcase>
    <testcase classname="Calendar API Service formatEvents should handle empty events object" name="Calendar API Service formatEvents should handle empty events object" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DateRangeShortcuts" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.073" tests="26">
    <testcase classname="DateRangeShortcuts setDateShortcutSelected and getDateShortcutSelected should set and get date shortcut selected" name="DateRangeShortcuts setDateShortcutSelected and getDateShortcutSelected should set and get date shortcut selected" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;Aujourd&apos;hui&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;Aujourd&apos;hui&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;Hier&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;Hier&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;Cette semaine&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;Cette semaine&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;La semaine derniere&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;La semaine derniere&quot; shortcut" time="0.002">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;Le mois dernier&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;Le mois dernier&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;les 7 derniers jours&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;les 7 derniers jours&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set range for &quot;les 30 derniers jours&quot; shortcut" name="DateRangeShortcuts useRangeDate should set range for &quot;les 30 derniers jours&quot; shortcut" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set value to null for &quot;Choisir une plage de date&quot; shortcut" name="DateRangeShortcuts useRangeDate should set value to null for &quot;Choisir une plage de date&quot; shortcut" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set value to null for unknown shortcut" name="DateRangeShortcuts useRangeDate should set value to null for unknown shortcut" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts useRangeDate should set value to null for empty shortcut" name="DateRangeShortcuts useRangeDate should set value to null for empty shortcut" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts getLogicComparatorDateRange should return a date comparator configuration" name="DateRangeShortcuts getLogicComparatorDateRange should return a date comparator configuration" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts getLogicComparatorDateRange should return 0 for comparator function (incomplete logic)" name="DateRangeShortcuts getLogicComparatorDateRange should return 0 for comparator function (incomplete logic)" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts isInRange should return true when date is within range" name="DateRangeShortcuts isInRange should return true when date is within range" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts isInRange should return false when date is before range" name="DateRangeShortcuts isInRange should return false when date is before range" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts isInRange should return false when date is after range" name="DateRangeShortcuts isInRange should return false when date is after range" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts isInRange should return false when currentDate is null" name="DateRangeShortcuts isInRange should return false when currentDate is null" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts isInRange should work with string dates" name="DateRangeShortcuts isInRange should work with string dates" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should add date comparison logic to column definition" name="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should add date comparison logic to column definition" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 0 for empty cell value" name="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 0 for empty cell value" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return -1 when cell value is less than filter" name="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return -1 when cell value is less than filter" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 1 when cell value is greater than filter" name="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 1 when cell value is greater than filter" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 0 when cell value equals filter" name="DateRangeShortcuts addLogicComparatorOnGridDefinitionColumn should return 0 when cell value equals filter" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts static methods should return available shortcuts" name="DateRangeShortcuts static methods should return available shortcuts" time="0.001">
    </testcase>
    <testcase classname="DateRangeShortcuts singleton instance should provide a singleton instance" name="DateRangeShortcuts singleton instance should provide a singleton instance" time="0">
    </testcase>
    <testcase classname="DateRangeShortcuts singleton instance should use the same instance" name="DateRangeShortcuts singleton instance should use the same instance" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Inventaire API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.067" tests="10">
    <testcase classname="Inventaire API Service Constructor should initialize endpoints correctly" name="Inventaire API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Inventaire API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service fetch (deprecated) should call GET /api/{userId}/inventaire with metadatas" name="Inventaire API Service fetch (deprecated) should call GET /api/{userId}/inventaire with metadatas" time="0">
    </testcase>
    <testcase classname="Inventaire API Service fetchEnCoursInventory should fetch all inventaires and get the last one by ID" name="Inventaire API Service fetchEnCoursInventory should fetch all inventaires and get the last one by ID" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service fetchEnCoursInventory should throw error when no inventaires found" name="Inventaire API Service fetchEnCoursInventory should throw error when no inventaires found" time="0.012">
    </testcase>
    <testcase classname="Inventaire API Service fetchOperationsByInventaireId should call GET /api/{userId}/inventaire/{id}/operations" name="Inventaire API Service fetchOperationsByInventaireId should call GET /api/{userId}/inventaire/{id}/operations" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service fetchOperationsByInventaireIdOnLieu should call GET /api/{userId}/inventaire/{id}/operations/lieu/{lieuId}" name="Inventaire API Service fetchOperationsByInventaireIdOnLieu should call GET /api/{userId}/inventaire/{id}/operations/lieu/{lieuId}" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service finalizeInventaireOnLieu (deprecated) should call POST /api/{userId}/inventaire/{id}/operations/lieu/{lieuId}/finalize" name="Inventaire API Service finalizeInventaireOnLieu (deprecated) should call POST /api/{userId}/inventaire/{id}/operations/lieu/{lieuId}/finalize" time="0.001">
    </testcase>
    <testcase classname="Inventaire API Service createOperation should create operation and refresh operations list" name="Inventaire API Service createOperation should create operation and refresh operations list" time="0">
    </testcase>
    <testcase classname="Inventaire API Service removeOperationInventaire should remove operation and refresh operations list" name="Inventaire API Service removeOperationInventaire should remove operation and refresh operations list" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Categories API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.064" tests="15">
    <testcase classname="Categories API Service Constructor should initialize endpoints correctly" name="Categories API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Categories API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Categories API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Categories API Service associateComposant should associate a composant with a category" name="Categories API Service associateComposant should associate a composant with a category" time="0.001">
    </testcase>
    <testcase classname="Categories API Service desassociateComposant should disassociate a composant from a category" name="Categories API Service desassociateComposant should disassociate a composant from a category" time="0">
    </testcase>
    <testcase classname="Categories API Service updateCollection should update multiple categories" name="Categories API Service updateCollection should update multiple categories" time="0.001">
    </testcase>
    <testcase classname="Categories API Service associate (deprecated) should handle association and disassociation of composants" name="Categories API Service associate (deprecated) should handle association and disassociation of composants" time="0">
    </testcase>
    <testcase classname="Categories API Service associate (deprecated) should skip empty arrays" name="Categories API Service associate (deprecated) should skip empty arrays" time="0">
    </testcase>
    <testcase classname="Categories API Service postAssociatedComposants (deprecated) should post associated composants" name="Categories API Service postAssociatedComposants (deprecated) should post associated composants" time="0.001">
    </testcase>
    <testcase classname="Categories API Service exportFile should export categories file with default parameters" name="Categories API Service exportFile should export categories file with default parameters" time="0">
    </testcase>
    <testcase classname="Categories API Service exportFile should export categories file with custom parameters" name="Categories API Service exportFile should export categories file with custom parameters" time="0.001">
    </testcase>
    <testcase classname="Categories API Service deleteAssociatedComposants (deprecated) should delete associated composants" name="Categories API Service deleteAssociatedComposants (deprecated) should delete associated composants" time="0.001">
    </testcase>
    <testcase classname="Categories API Service fetchCategoriesLieux (deprecated) should fetch categories lieux" name="Categories API Service fetchCategoriesLieux (deprecated) should fetch categories lieux" time="0.001">
    </testcase>
    <testcase classname="Categories API Service getCategoriesWithDetails (deprecated) should get categories with details using provided metadatas" name="Categories API Service getCategoriesWithDetails (deprecated) should get categories with details using provided metadatas" time="0.001">
    </testcase>
    <testcase classname="Categories API Service getCategoriesWithDetails (deprecated) should get categories with details using default metadatas" name="Categories API Service getCategoriesWithDetails (deprecated) should get categories with details using default metadatas" time="0">
    </testcase>
    <testcase classname="Categories API Service addCorpsDetat should add corps detat to category association" name="Categories API Service addCorpsDetat should add corps detat to category association" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Interventions API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.061" tests="9">
    <testcase classname="Interventions API Service Constructor should initialize endpoints correctly" name="Interventions API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Interventions API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Interventions API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Interventions API Service getPdfFile should call GET /api/intervention/export/{id}/S" name="Interventions API Service getPdfFile should call GET /api/intervention/export/{id}/S" time="0.002">
    </testcase>
    <testcase classname="Interventions API Service formatToCalendarEvents should format intervention-prevue correctly" name="Interventions API Service formatToCalendarEvents should format intervention-prevue correctly" time="0.001">
    </testcase>
    <testcase classname="Interventions API Service formatToCalendarEvents should format intervention-realisee with fichesav_id correctly" name="Interventions API Service formatToCalendarEvents should format intervention-realisee with fichesav_id correctly" time="0.001">
    </testcase>
    <testcase classname="Interventions API Service getCalendarEvents should get interventions and format them to calendar events" name="Interventions API Service getCalendarEvents should get interventions and format them to calendar events" time="0">
    </testcase>
    <testcase classname="Interventions API Service createInterventionsEquipements should call POST /api/interventionsequipements/{id}" name="Interventions API Service createInterventionsEquipements should call POST /api/interventionsequipements/{id}" time="0">
    </testcase>
    <testcase classname="Interventions API Service deleteInterventionEquipement should call DELETE /api/interventionsequipements/{id}" name="Interventions API Service deleteInterventionEquipement should call DELETE /api/interventionsequipements/{id}" time="0.001">
    </testcase>
    <testcase classname="Interventions API Service deleteInterventionsEquipements should call DELETE /api/interventionsequipements" name="Interventions API Service deleteInterventionsEquipements should call DELETE /api/interventionsequipements" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LibelServices API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.071" tests="10">
    <testcase classname="LibelServices API Service Constructor should initialize endpoints correctly" name="LibelServices API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="LibelServices API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="LibelServices API Service getAll (overridden) should call GET with metadatas and userId" name="LibelServices API Service getAll (overridden) should call GET with metadatas and userId" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service getAll (overridden) should handle _restrictionSite option" name="LibelServices API Service getAll (overridden) should handle _restrictionSite option" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service getAll (overridden) should not add site restriction when _all is true" name="LibelServices API Service getAll (overridden) should not add site restriction when _all is true" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service create (overridden) should call POST with datas wrapper" name="LibelServices API Service create (overridden) should call POST with datas wrapper" time="0">
    </testcase>
    <testcase classname="LibelServices API Service create (overridden) should handle empty array" name="LibelServices API Service create (overridden) should handle empty array" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service deleteLibelService should call DELETE with singular endpoint and service ID" name="LibelServices API Service deleteLibelService should call DELETE with singular endpoint and service ID" time="0.001">
    </testcase>
    <testcase classname="LibelServices API Service deleteLibelService should throw error when service ID is missing" name="LibelServices API Service deleteLibelService should throw error when service ID is missing" time="0.01">
    </testcase>
    <testcase classname="LibelServices API Service deleteLibelService should throw error when service ID is undefined" name="LibelServices API Service deleteLibelService should throw error when service ID is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Contact API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.054" tests="2">
    <testcase classname="Contact API Service Constructor should initialize endpoints correctly" name="Contact API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Contact API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Contact API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
  </testsuite>
  <testsuite name="BonsDentree API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.067" tests="10">
    <testcase classname="BonsDentree API Service Constructor should initialize endpoints correctly" name="BonsDentree API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="BonsDentree API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should get all bons d&apos;entrée with getBonsDentree method" name="BonsDentree API Service CRUD Operations should get all bons d&apos;entrée with getBonsDentree method" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should get all bons d&apos;entrée through getAll method" name="BonsDentree API Service CRUD Operations should get all bons d&apos;entrée through getAll method" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should get bon d&apos;entrée by ID with getBonDentree method" name="BonsDentree API Service CRUD Operations should get bon d&apos;entrée by ID with getBonDentree method" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should get bon d&apos;entrée by ID through getById method" name="BonsDentree API Service CRUD Operations should get bon d&apos;entrée by ID through getById method" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should create bons d&apos;entrée" name="BonsDentree API Service CRUD Operations should create bons d&apos;entrée" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should create array of bons d&apos;entrée" name="BonsDentree API Service CRUD Operations should create array of bons d&apos;entrée" time="0.001">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should update a bon d&apos;entrée" name="BonsDentree API Service CRUD Operations should update a bon d&apos;entrée" time="0">
    </testcase>
    <testcase classname="BonsDentree API Service CRUD Operations should remove a bon d&apos;entrée" name="BonsDentree API Service CRUD Operations should remove a bon d&apos;entrée" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Affectations API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.067" tests="15">
    <testcase classname="Affectations API Service Constructor should initialize endpoints correctly" name="Affectations API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Affectations API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Affectation Task Methods should copy affectation tache" name="Affectations API Service Affectation Task Methods should copy affectation tache" time="0.002">
    </testcase>
    <testcase classname="Affectations API Service Affectation Task Methods should create affectations users taches" name="Affectations API Service Affectation Task Methods should create affectations users taches" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Affectation Task Methods should delete affectations users taches" name="Affectations API Service Affectation Task Methods should delete affectations users taches" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Affectation Task Methods should delete affectation" name="Affectations API Service Affectation Task Methods should delete affectation" time="0">
    </testcase>
    <testcase classname="Affectations API Service Schedule Methods should save schedule" name="Affectations API Service Schedule Methods should save schedule" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Schedule Methods should save schedules for multiple maintenances" name="Affectations API Service Schedule Methods should save schedules for multiple maintenances" time="0">
    </testcase>
    <testcase classname="Affectations API Service Schedule Methods should update schedule" name="Affectations API Service Schedule Methods should update schedule" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Programmation Contrat Intervention Methods should fetch programmation contrat intervention" name="Affectations API Service Programmation Contrat Intervention Methods should fetch programmation contrat intervention" time="0">
    </testcase>
    <testcase classname="Affectations API Service Programmation Contrat Intervention Methods should create programmation contrat intervention" name="Affectations API Service Programmation Contrat Intervention Methods should create programmation contrat intervention" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Programmation Contrat Intervention Methods should update programmation contrat intervention" name="Affectations API Service Programmation Contrat Intervention Methods should update programmation contrat intervention" time="0">
    </testcase>
    <testcase classname="Affectations API Service Utility Methods should convert item to calendar format" name="Affectations API Service Utility Methods should convert item to calendar format" time="0.001">
    </testcase>
    <testcase classname="Affectations API Service Utility Methods should convert tiers to calendar format" name="Affectations API Service Utility Methods should convert tiers to calendar format" time="0">
    </testcase>
    <testcase classname="Affectations API Service Utility Methods should format calendars from affectables" name="Affectations API Service Utility Methods should format calendars from affectables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Messaging" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.065" tests="5">
    <testcase classname="Messaging should subscribe to a topic" name="Messaging should subscribe to a topic" time="0.002">
    </testcase>
    <testcase classname="Messaging should unsubscribe from a topic" name="Messaging should unsubscribe from a topic" time="0.001">
    </testcase>
    <testcase classname="Messaging should unsubscribe from all topics" name="Messaging should unsubscribe from all topics" time="0">
    </testcase>
    <testcase classname="Messaging should send a message to a topic" name="Messaging should send a message to a topic" time="0.001">
    </testcase>
    <testcase classname="Messaging should send a message to a device" name="Messaging should send a message to a device" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ApiRequest Class" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.075" tests="8">
    <testcase classname="ApiRequest Class Constructor should initialize auth and apiBaseUrl properties correctly" name="ApiRequest Class Constructor should initialize auth and apiBaseUrl properties correctly" time="0.001">
    </testcase>
    <testcase classname="ApiRequest Class Methods should call getAll with the correct endpoint and metadata" name="ApiRequest Class Methods should call getAll with the correct endpoint and metadata" time="0.001">
    </testcase>
    <testcase classname="ApiRequest Class Methods should call getById with the correct endpoint and HTTP method" name="ApiRequest Class Methods should call getById with the correct endpoint and HTTP method" time="0.001">
    </testcase>
    <testcase classname="ApiRequest Class Methods should call create with the correct endpoint and data" name="ApiRequest Class Methods should call create with the correct endpoint and data" time="0.001">
    </testcase>
    <testcase classname="ApiRequest Class Methods should call update with the correct endpoint and data" name="ApiRequest Class Methods should call update with the correct endpoint and data" time="0">
    </testcase>
    <testcase classname="ApiRequest Class Methods should call remove with the correct endpoint" name="ApiRequest Class Methods should call remove with the correct endpoint" time="0.001">
    </testcase>
    <testcase classname="ApiRequest Class Edge Cases should handle invalid data gracefully" name="ApiRequest Class Edge Cases should handle invalid data gracefully" time="0.008">
    </testcase>
    <testcase classname="ApiRequest Class Edge Cases should handle API errors gracefully" name="ApiRequest Class Edge Cases should handle API errors gracefully" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LibelProblem API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.066" tests="10">
    <testcase classname="LibelProblem API Service Constructor should initialize endpoints correctly" name="LibelProblem API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="LibelProblem API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="LibelProblem API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="LibelProblem API Service getAll (overridden) should call GET /api/libelles-probleme with userId and metadatas" name="LibelProblem API Service getAll (overridden) should call GET /api/libelles-probleme with userId and metadatas" time="0">
    </testcase>
    <testcase classname="LibelProblem API Service create (overridden) should call POST /api/libelles-probleme with datas wrapper" name="LibelProblem API Service create (overridden) should call POST /api/libelles-probleme with datas wrapper" time="0.001">
    </testcase>
    <testcase classname="LibelProblem API Service remove (overridden) should call DELETE /api/libelle-probleme/{id}" name="LibelProblem API Service remove (overridden) should call DELETE /api/libelle-probleme/{id}" time="0.001">
    </testcase>
    <testcase classname="LibelProblem API Service createComposantProblems should call POST /api/composant/{id}/libels-problems" name="LibelProblem API Service createComposantProblems should call POST /api/composant/{id}/libels-problems" time="0">
    </testcase>
    <testcase classname="LibelProblem API Service deleteComposantProblem should call DELETE /api/libelle-probleme/{id}" name="LibelProblem API Service deleteComposantProblem should call DELETE /api/libelle-probleme/{id}" time="0.001">
    </testcase>
    <testcase classname="LibelProblem API Service getComposantProblems should call GET /api/composant/{id}/libelles-probleme" name="LibelProblem API Service getComposantProblems should call GET /api/composant/{id}/libelles-probleme" time="0">
    </testcase>
    <testcase classname="LibelProblem API Service getLibellesProblemByCategorie should call GET /api/libelles-probleme/categorie/{id}/all" name="LibelProblem API Service getLibellesProblemByCategorie should call GET /api/libelles-probleme/categorie/{id}/all" time="0">
    </testcase>
    <testcase classname="LibelProblem API Service getLibelsEquipement should return empty array as placeholder" name="LibelProblem API Service getLibelsEquipement should return empty array as placeholder" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ContratEcheancier API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.065" tests="6">
    <testcase classname="ContratEcheancier API Service Constructor should initialize endpoints correctly" name="ContratEcheancier API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="ContratEcheancier API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="ContratEcheancier API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="ContratEcheancier API Service Non-CRUD Methods getContratEcheances should get echeances for a specific contract" name="ContratEcheancier API Service Non-CRUD Methods getContratEcheances should get echeances for a specific contract" time="0">
    </testcase>
    <testcase classname="ContratEcheancier API Service Non-CRUD Methods create should create contract echeances with userId parameter" name="ContratEcheancier API Service Non-CRUD Methods create should create contract echeances with userId parameter" time="0.001">
    </testcase>
    <testcase classname="ContratEcheancier API Service Non-CRUD Methods updateContratEcheance should update contract echeance with userId parameter" name="ContratEcheancier API Service Non-CRUD Methods updateContratEcheance should update contract echeance with userId parameter" time="0.001">
    </testcase>
    <testcase classname="ContratEcheancier API Service Non-CRUD Methods deleteContratEcheance should delete contract echeance with userId parameter" name="ContratEcheancier API Service Non-CRUD Methods deleteContratEcheance should delete contract echeance with userId parameter" time="0">
    </testcase>
  </testsuite>
  <testsuite name="BonsDeSortie API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.085" tests="13">
    <testcase classname="BonsDeSortie API Service Constructor should initialize endpoints correctly" name="BonsDeSortie API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="BonsDeSortie API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.007">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should get all bons de sortie with getBonsDeSortie method" name="BonsDeSortie API Service CRUD Operations should get all bons de sortie with getBonsDeSortie method" time="0.002">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should get all bons de sortie through getAll method" name="BonsDeSortie API Service CRUD Operations should get all bons de sortie through getAll method" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should get bon de sortie by ID with getBonDeSortie method" name="BonsDeSortie API Service CRUD Operations should get bon de sortie by ID with getBonDeSortie method" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should get bon de sortie by ID through getById method" name="BonsDeSortie API Service CRUD Operations should get bon de sortie by ID through getById method" time="0">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should create bons de sortie without fiche demande consommable" name="BonsDeSortie API Service CRUD Operations should create bons de sortie without fiche demande consommable" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should create bons de sortie with fiche demande consommable" name="BonsDeSortie API Service CRUD Operations should create bons de sortie with fiche demande consommable" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should update a bon de sortie" name="BonsDeSortie API Service CRUD Operations should update a bon de sortie" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service CRUD Operations should remove a bon de sortie" name="BonsDeSortie API Service CRUD Operations should remove a bon de sortie" time="0">
    </testcase>
    <testcase classname="BonsDeSortie API Service Signataires Methods should get receveurs signataires by default" name="BonsDeSortie API Service Signataires Methods should get receveurs signataires by default" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service Signataires Methods should get receveurs signataires explicitly" name="BonsDeSortie API Service Signataires Methods should get receveurs signataires explicitly" time="0.001">
    </testcase>
    <testcase classname="BonsDeSortie API Service Signataires Methods should get donneurs signataires" name="BonsDeSortie API Service Signataires Methods should get donneurs signataires" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Checkpoints API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.078" tests="9">
    <testcase classname="Checkpoints API Service Constructor should initialize endpoints correctly" name="Checkpoints API Service Constructor should initialize endpoints correctly" time="0">
    </testcase>
    <testcase classname="Checkpoints API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Checkpoints API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Checkpoints API Service CRUD Operations getAll (checkpointsMixins_getCheckpoint equivalent) should get all checkpoints with metadatas" name="Checkpoints API Service CRUD Operations getAll (checkpointsMixins_getCheckpoint equivalent) should get all checkpoints with metadatas" time="0.001">
    </testcase>
    <testcase classname="Checkpoints API Service CRUD Operations create (checkpointsMixins_createCheckpoints equivalent) should create multiple checkpoints" name="Checkpoints API Service CRUD Operations create (checkpointsMixins_createCheckpoints equivalent) should create multiple checkpoints" time="0.001">
    </testcase>
    <testcase classname="Checkpoints API Service CRUD Operations update (checkpointsMixins_updateCheckpoint equivalent) should update a checkpoint" name="Checkpoints API Service CRUD Operations update (checkpointsMixins_updateCheckpoint equivalent) should update a checkpoint" time="0">
    </testcase>
    <testcase classname="Checkpoints API Service CRUD Operations remove (checkpointsMixins_deleteCheckpoint equivalent) should delete a checkpoint" name="Checkpoints API Service CRUD Operations remove (checkpointsMixins_deleteCheckpoint equivalent) should delete a checkpoint" time="0.001">
    </testcase>
    <testcase classname="Checkpoints API Service CRUD Operations getById should get a checkpoint by id" name="Checkpoints API Service CRUD Operations getById should get a checkpoint by id" time="0">
    </testcase>
    <testcase classname="Checkpoints API Service Integration with CheckpointMixins patterns should handle the same data flow as checkpointsMixins_getCheckpoint" name="Checkpoints API Service Integration with CheckpointMixins patterns should handle the same data flow as checkpointsMixins_getCheckpoint" time="0.001">
    </testcase>
    <testcase classname="Checkpoints API Service Integration with CheckpointMixins patterns should handle the same data flow as checkpointsMixins_createCheckpoints" name="Checkpoints API Service Integration with CheckpointMixins patterns should handle the same data flow as checkpointsMixins_createCheckpoints" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Documents API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.059" tests="7">
    <testcase classname="Documents API Service Constructor should initialize endpoints correctly" name="Documents API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Documents API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Documents API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Documents API Service Custom Methods should get documents with metadata filters" name="Documents API Service Custom Methods should get documents with metadata filters" time="0.001">
    </testcase>
    <testcase classname="Documents API Service Custom Methods should get document plans with site restrictions" name="Documents API Service Custom Methods should get document plans with site restrictions" time="0">
    </testcase>
    <testcase classname="Documents API Service Custom Methods should create documents" name="Documents API Service Custom Methods should create documents" time="0.001">
    </testcase>
    <testcase classname="Documents API Service Custom Methods should update document with custom data structure" name="Documents API Service Custom Methods should update document with custom data structure" time="0">
    </testcase>
    <testcase classname="Documents API Service Custom Methods should remove document" name="Documents API Service Custom Methods should remove document" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Account API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.062" tests="8">
    <testcase classname="Account API Service Constructor should initialize endpoints correctly" name="Account API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Account API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Account API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="Account API Service updateAccount should update account information" name="Account API Service updateAccount should update account information" time="0.001">
    </testcase>
    <testcase classname="Account API Service fetchAccount should fetch account information" name="Account API Service fetchAccount should fetch account information" time="0.001">
    </testcase>
    <testcase classname="Account API Service createAccount should create a new account" name="Account API Service createAccount should create a new account" time="0.001">
    </testcase>
    <testcase classname="Account API Service CRUD Operations should get all accounts" name="Account API Service CRUD Operations should get all accounts" time="0">
    </testcase>
    <testcase classname="Account API Service CRUD Operations should get account by id" name="Account API Service CRUD Operations should get account by id" time="0.001">
    </testcase>
    <testcase classname="Account API Service CRUD Operations should remove an account" name="Account API Service CRUD Operations should remove an account" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Reponses API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.062" tests="6">
    <testcase classname="Reponses API Service Constructor should initialize endpoints correctly" name="Reponses API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Reponses API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Reponses API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="Reponses API Service Utility Methods isPreviousRegisterResponse should return true when examined response matches meter reading criteria" name="Reponses API Service Utility Methods isPreviousRegisterResponse should return true when examined response matches meter reading criteria" time="0">
    </testcase>
    <testcase classname="Reponses API Service Utility Methods isPreviousRegisterResponse should return false when examined response does not match meter reading criteria" name="Reponses API Service Utility Methods isPreviousRegisterResponse should return false when examined response does not match meter reading criteria" time="0">
    </testcase>
    <testcase classname="Reponses API Service Utility Methods findPreviousRegisterResponse should find and process previous register response" name="Reponses API Service Utility Methods findPreviousRegisterResponse should find and process previous register response" time="0">
    </testcase>
    <testcase classname="Reponses API Service Utility Methods setConsoJournaliere should process all meter readings in array" name="Reponses API Service Utility Methods setConsoJournaliere should process all meter readings in array" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="GroupeValidateursUsers API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.06" tests="2">
    <testcase classname="GroupeValidateursUsers API Service Constructor should initialize endpoints correctly" name="GroupeValidateursUsers API Service Constructor should initialize endpoints correctly" time="0">
    </testcase>
    <testcase classname="GroupeValidateursUsers API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="GroupeValidateursUsers API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CorpsDetat API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.063" tests="6">
    <testcase classname="CorpsDetat API Service Constructor should initialize endpoints correctly" name="CorpsDetat API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="CorpsDetat API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="CorpsDetat API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
    <testcase classname="CorpsDetat API Service Non-CRUD Methods getCorpsDetats should get corps d&apos;etat list" name="CorpsDetat API Service Non-CRUD Methods getCorpsDetats should get corps d&apos;etat list" time="0.001">
    </testcase>
    <testcase classname="CorpsDetat API Service Non-CRUD Methods create should create corps d&apos;etat with datas wrapper" name="CorpsDetat API Service Non-CRUD Methods create should create corps d&apos;etat with datas wrapper" time="0.001">
    </testcase>
    <testcase classname="CorpsDetat API Service Non-CRUD Methods updateCorpsDetat should update corps d&apos;etat with datas wrapper" name="CorpsDetat API Service Non-CRUD Methods updateCorpsDetat should update corps d&apos;etat with datas wrapper" time="0">
    </testcase>
    <testcase classname="CorpsDetat API Service Non-CRUD Methods deleteCorpsDetat should delete corps d&apos;etat" name="CorpsDetat API Service Non-CRUD Methods deleteCorpsDetat should delete corps d&apos;etat" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BonsDeCommandeEntites API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.059" tests="7">
    <testcase classname="BonsDeCommandeEntites API Service Constructor should initialize endpoints correctly" name="BonsDeCommandeEntites API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="BonsDeCommandeEntites API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service CRUD Operations should get all bons de commande entites with getEntites method" name="BonsDeCommandeEntites API Service CRUD Operations should get all bons de commande entites with getEntites method" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service CRUD Operations should get all bons de commande entites through getAll method" name="BonsDeCommandeEntites API Service CRUD Operations should get all bons de commande entites through getAll method" time="0">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service CRUD Operations should create bons de commande entites array" name="BonsDeCommandeEntites API Service CRUD Operations should create bons de commande entites array" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service CRUD Operations should update a bon de commande entite" name="BonsDeCommandeEntites API Service CRUD Operations should update a bon de commande entite" time="0.001">
    </testcase>
    <testcase classname="BonsDeCommandeEntites API Service CRUD Operations should remove a bon de commande entite" name="BonsDeCommandeEntites API Service CRUD Operations should remove a bon de commande entite" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Equipements API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.051" tests="2">
    <testcase classname="Equipements API Service Constructor should initialize endpoints correctly" name="Equipements API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="Equipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="Equipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FicheDemandeConsommables API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.052" tests="2">
    <testcase classname="FicheDemandeConsommables API Service Constructor should initialize endpoints correctly" name="FicheDemandeConsommables API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="FicheDemandeConsommables API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="FicheDemandeConsommables API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BonDeCommandeItems API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.064" tests="8">
    <testcase classname="BonDeCommandeItems API Service Constructor should initialize endpoints correctly" name="BonDeCommandeItems API Service Constructor should initialize endpoints correctly" time="0">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="BonDeCommandeItems API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service CRUD Operations should get all bon de commande items with metadatas" name="BonDeCommandeItems API Service CRUD Operations should get all bon de commande items with metadatas" time="0.001">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service CRUD Operations should create bon de commande items array" name="BonDeCommandeItems API Service CRUD Operations should create bon de commande items array" time="0.001">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service CRUD Operations should update a bon de commande item" name="BonDeCommandeItems API Service CRUD Operations should update a bon de commande item" time="0">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service CRUD Operations should remove a bon de commande item" name="BonDeCommandeItems API Service CRUD Operations should remove a bon de commande item" time="0.001">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service Utility Methods should get clones of bon de commande items" name="BonDeCommandeItems API Service Utility Methods should get clones of bon de commande items" time="0.001">
    </testcase>
    <testcase classname="BonDeCommandeItems API Service Utility Methods should handle getClones when response is direct array" name="BonDeCommandeItems API Service Utility Methods should handle getClones when response is direct array" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DeplacementsEquipements API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.053" tests="3">
    <testcase classname="DeplacementsEquipements API Service Constructor should initialize endpoints correctly" name="DeplacementsEquipements API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="DeplacementsEquipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="DeplacementsEquipements API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0">
    </testcase>
    <testcase classname="DeplacementsEquipements API Service Non-CRUD Methods should create multiple deplacements equipements" name="DeplacementsEquipements API Service Non-CRUD Methods should create multiple deplacements equipements" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="GroupeValidateurs API Service" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.053" tests="2">
    <testcase classname="GroupeValidateurs API Service Constructor should initialize endpoints correctly" name="GroupeValidateurs API Service Constructor should initialize endpoints correctly" time="0.001">
    </testcase>
    <testcase classname="GroupeValidateurs API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" name="GroupeValidateurs API Service Constructor should inherit from ApiRequest with correct auth and apiBaseUrl" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Sample Test" errors="0" failures="0" skipped="0" timestamp="2025-07-28T10:19:26" time="0.045" tests="1">
    <testcase classname="Sample Test should return true for a basic assertion" name="Sample Test should return true for a basic assertion" time="0.001">
    </testcase>
  </testsuite>
</testsuites>